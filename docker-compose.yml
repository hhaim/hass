version: '3.5'

# DOCKER COMPOSE COMMAND REFERENCE
# --------------------------------------------------------------------------
# Start    | docker-compose up -d
# Stop     | docker-compose stop
# Update   | docker-compose pull
# Logs     | docker-compose logs --tail=25 -f
# debug    : docker-compose exec inlfuxdb bash --> get into one of 
# influxd 
# influxd backup -db hass_db -skip-errors /mnt/nas0/hass_backup/  # specifc time every week or day 
# influxd restore -newdb hass_db -db hass_db -datadir /var/lib/influxdb/data/hass_db/ /opt/
# sudo systemctl stop dhass # to start debug session 
# sudo systemctl start dhass 
# ./b --help for sync and common commands


services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:2023.8.0"
    depends_on:
      - mariadb
      - victoriametrics
      - mosquitto
    volumes:
      - ./cfg/hass:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host  
    healthcheck:
        test: 'curl -m 90 -sLf http://localhost:8123 || date >> /config/healthcheck' #| pkill -9 python3'
        interval: 90s
        timeout: 60s
        retries: 2    
    #user: "${UID}:${GID}"
    environment:
      TZ: ${TZ}      
  mariadb:
    restart: unless-stopped
    image: mariadb:11.0.2-jammy
    #user: "${UID}:${GID}"    
    ports:
      - "3306:3306/tcp"    
    volumes:
      - ./cfg/mariadb:/etc/mysql/conf.d
      - ./store/mariadb:/var/lib/mysql # Never remove
    environment:
      TZ: ${TZ}      
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:2.0.14
    restart: unless-stopped
    user: "${UID}:${GID}"    
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./cfg/mosquitto/:/mosquitto/config
      - ./store/mosquitto/data:/mosquitto/data
      - ./store/mosquitto/log:/mosquitto/log
    environment:
      TZ: ${TZ}

  appdaemon:
      container_name: appdaemon
      #4.1.0
      image: acockburn/appdaemon:3.0.5
      #user: "${UID}:${GID}"
      depends_on:
       - homeassistant
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - ./cfg/hass:/conf
      restart: always
      environment:
        TZ: ${TZ}      

  tasmotaadmin:
      container_name: tasmotaadmin
      image: raymondmm/tasmoadmin:v1.7.0
      restart: unless-stopped
      ports:
        - 9000:80
      volumes:
        - './cfg/tasmota:/data/tasmoadmin'


  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:v1.91.3
    volumes:
      - /tmp/agent:/vmagentdata
      - ./cfg/agent/config:/etc/prometheus
    command:
      - "--promscrape.config=/etc/prometheus/agent.yaml"
      - "--remoteWrite.url=${VMAGENT_URL}"
      - "--remoteWrite.basicAuth.password=${VMAGNET_PASSWORD}"
      - "--remoteWrite.basicAuth.username=${VMAGENT_USER}"

    environment:
      TZ: ${TZ}
    restart: always

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.91.2
    user: "${UID}:${GID}"
    ports:
      - 8428:8428
      - 8089:8089
    volumes:
      - ./store/vm:/victoria-metrics-data
    restart: "no"
    command:
      - "-httpListenAddr=:8428"
      - "-influxListenAddr=:8089"
      - "-retentionPeriod=3y"

  grafana:
      container_name: grafana
      image: grafana/grafana:10.0.1-ubuntu
      user: "${UID}:${GID}"
      depends_on:
        - victoriametrics
      volumes:
        - ./store/grafana2:/var/lib/grafana
      ports:
        - '3000:3000'
      environment:
        #- GF_SECURITY_ALLOW_EMBEDDING=true
        #- GF_SECURITY_COOKIE_SAMESITE=none
        - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
        - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}        
        - TZ=${TZ}      
      restart: "no"


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    restart: always
    command: 
      - '--housekeeping_interval=30s'
      - '--docker_only=true'
      - '--disable_metrics=disk,network,tcp,udp,percpu,sched,process'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/snap/docker/common/var-lib-docker/:/var/lib/docker:ro
    ports:
      - 8091:8080
   

  ping_exporter:
    image: czerwonk/ping_exporter:v1.1.0
    user: "${UID}:${GID}"
    ports:
      - 9427:9427
    volumes:
      - ./cfg/ping_exporter:/config:ro
    cap_add:
      - CAP_NET_RAW

  vmagent2:
    image: victoriametrics/vmagent:v1.91.3
    volumes:
      - /tmp/agent2:/vmagentdata
      - ./cfg/agent2/config:/etc/prometheus
    command:
      - "--promscrape.config=/etc/prometheus/agent.yaml"
      - "--remoteWrite.url=http://10.0.0.140:8428/api/v1/write"

    environment:
      TZ: ${TZ}
    restart: always


volumes:
  nas_10:
    driver: local
    driver_opts:
      type: nfs
      # The IP of your NAS:
      o: ${NAS_URL}
      # Share path on your NAS:
      device: ":${NAS_PATH}" 
